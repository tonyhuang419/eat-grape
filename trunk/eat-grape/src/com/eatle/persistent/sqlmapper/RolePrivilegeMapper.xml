<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eatle.persistent.mapper.RolePrivilegeMapper">
  <resultMap id="BaseResultMap" type="RolePrivilege">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="priv_id" jdbcType="BIGINT" property="privId" />
  </resultMap>
  <resultMap id="PrivResultMap" type="Priv" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="priv_name" property="privName" jdbcType="VARCHAR" />
    <result column="meue_name" property="meueName" jdbcType="VARCHAR" />
    <result column="action" property="action" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="is_show" property="isShow" jdbcType="TINYINT" />
    <result column="pid" property="pid" jdbcType="BIGINT" />
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, role_id, priv_id
  </sql>
  <select id="selectByCriteria" parameterType="RolePrivilegeCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from t_role_privilege
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_role_privilege
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_role_privilege
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="RolePrivilege">
    insert into t_role_privilege (id, role_id, priv_id
      )
    values (#{id,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{privId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="RolePrivilege">
    insert into t_role_privilege
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="privId != null">
        priv_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="privId != null">
        #{privId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="RolePrivilege">
    update t_role_privilege
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="privId != null">
        priv_id = #{privId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="RolePrivilege">
    update t_role_privilege
    set role_id = #{roleId,jdbcType=BIGINT},
      priv_id = #{privId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectCountByCriteria" parameterType="RolePrivilegeCriteria" resultType="long">
    select count(1) 
    from t_role_privilege
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByMap" parameterType="Map" resultMap="BaseResultMap">
    select * from t_role_privilege
    <where>
      <if test="id != null">
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="roleId != null">
        and role_id = #{roleId,jdbcType=BIGINT}
      </if>
      <if test="privId != null">
        and priv_id = #{privId,jdbcType=BIGINT}
      </if>
    </where>
  </select>
  
  <select id="selectPrivsByRoleId" parameterType="java.lang.Long" resultMap="PrivResultMap">
  	select 
  		b.id, b.priv_name, b.meue_name, b.action, b.description, b.is_show, b.pid 
  	from 
  		t_role_privilege a, t_privilege b 
  	<where> 
  		<if test="_parameter != null">
  			a.role_id = #{id, jdbcType=BIGINT} and a.priv_id = b.id;
  		</if>
  	</where>
  </select>
  
  <delete id="deleteByCriteria" parameterType="RolePrivilegeCriteria">
  	delete from t_role_privilege
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
</mapper>