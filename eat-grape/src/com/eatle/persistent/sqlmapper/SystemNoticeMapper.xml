<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eatle.persistent.mapper.SystemNoticeMapper" >
  <resultMap id="BaseResultMap" type="SystemNotice" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="target" property="target" jdbcType="SMALLINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="SystemNotice" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, user_id, send_time, target
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="SystemNoticeCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_system_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="pageSize > 0" >
      limit ${startIndex},${pageSize}
    </if>
  </select>
  <select id="selectByCriteria" resultMap="BaseResultMap" parameterType="SystemNoticeCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from t_system_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="pageSize > 0" >
      limit ${startIndex},${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_system_notice
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_system_notice
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="SystemNotice" >
    insert into t_system_notice (id, title, user_id, 
      send_time, target, content
      )
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{sendTime,jdbcType=TIMESTAMP}, #{target,jdbcType=SMALLINT}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="SystemNotice" >
    insert into t_system_notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="sendTime != null" >
        send_time,
      </if>
      <if test="target != null" >
        target,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="target != null" >
        #{target,jdbcType=SMALLINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="SystemNotice" >
    update t_system_notice
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="sendTime != null" >
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="target != null" >
        target = #{target,jdbcType=SMALLINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="SystemNotice" >
    update t_system_notice
    set title = #{title,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      target = #{target,jdbcType=SMALLINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="SystemNotice" >
    update t_system_notice
    set title = #{title,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      target = #{target,jdbcType=SMALLINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectCountByCriteria" resultType="long" parameterType="SystemNoticeCriteria" >
    select count(1) 
    from t_system_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByMap" resultMap="BaseResultMap" parameterType="Map" >
    select * from t_system_notice
    <where >
      <if test="id != null" >
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="title != null" >
        and title = #{title,jdbcType=VARCHAR}
      </if>
      <if test="userId != null" >
        and user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="sendTime != null" >
        and send_time = #{sendTime,jdbcType=TIMESTAMP}
      </if>
      <if test="target != null" >
        and target = #{target,jdbcType=SMALLINT}
      </if>
      <if test="content != null" >
        and content = #{content,jdbcType=LONGVARCHAR}
      </if>
    </where>
  </select>
</mapper>